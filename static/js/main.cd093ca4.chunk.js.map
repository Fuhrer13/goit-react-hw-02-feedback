{"version":3,"sources":["Components/FeddbackOptions/FeddbackOptions.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","Components/Section/Section.js","App.js","index.js"],"names":["Feedback","options","onLeaveFeedback","buttons","Object","keys","map","option","key","name","onClick","type","Notification","message","prototype","PropTypes","string","isRequired","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","App","state","totalFeedback","element","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMA8BeA,EA3BE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACrBC,EAAUC,OAAOC,KAAKJ,GAC5B,OACE,oCACGE,EAAQG,KAAI,SAACC,GAAD,OACX,4BACEC,IAAKD,EACLE,KAAMF,EACNG,QAASR,EACTS,KAAK,UAEJJ,Q,OCXLK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAMA,IAGfD,EAAaE,UAAY,CACvBD,Q,OAASE,EAAUC,OAAOC,YAEbL,QCcAM,EArBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,6BACE,6BACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACVC,EAAqB,GACpB,iDAAuBA,EAAvB,QCQKC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,4BAAKD,GACJC,ICJcC,E,4MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,cAAgB,SAACC,GAAa,IACpBrB,EAASqB,EAAQC,OAAjBtB,KACR,EAAKuB,UAAS,SAACC,GAAD,sBAAcxB,EAAOwB,EAAKxB,GAAQ,O,EAGlDyB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBT,KADiB,EACXC,QADW,EACFC,K,EAIzBc,gCAAkC,WAKhC,OAHG,EAAKP,MAAMT,KAAO,EAAKe,qBACxB,KACAE,QAAQ,I,uDAIF,IAAD,EACwBC,KAAKT,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASI,MAAM,yBACb,kBAAC,EAAD,CACExB,QAASoC,KAAKT,MACd1B,gBAAiBmC,KAAKR,iBAIzBQ,KAAKH,qBAAuB,EAC3B,kBAAC,EAAD,CAAST,MAAM,cACb,kBAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,KAAKH,qBACZX,mBAAoBc,KAAKF,qCAI7B,kBAAC,EAAD,CAActB,QAAQ,2B,GA/CCyB,aCFjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.cd093ca4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n  const buttons = Object.keys(options);\r\n  return (\r\n    <>\r\n      {buttons.map((option) => (\r\n        <button\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n          type=\"button\"\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div>{message}</div>;\r\n};\r\n\r\nNotification.prototype = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        {positivePercentage > 0 && (\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport FeedbackOptions from \"../FeddbackOptions/FeddbackOptions\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeddbackOptions/FeddbackOptions\";\nimport Notification from \"./Components/Notification/Notification\";\nimport Section from \"./Components/Section/Section\";\nimport Statistics from \"./Components/Statistics/Statistics\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  totalFeedback = (element) => {\n    const { name } = element.target;\n    this.setState((prev) => ({ [name]: prev[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercentage = (\n      (this.state.good / this.countTotalFeedback()) *\n      100\n    ).toFixed(2);\n    return positiveFeedbackPercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.totalFeedback}\n          />\n        </Section>\n\n        {this.countTotalFeedback() > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}